@model JobsWebApp.ViewModels.Admin.AdminControllerCreateViewModel;

<h1>Create a new Vacancy</h1>

<form action="/admin/create" method="post">

    <fieldset>
        <legend class="form-control-lg">Details</legend>

        <div class="form-group">
            @Html.LabelFor(model => model.Vacancy.JobTitle, new {@class = "control-label col-md-2"})
            @Html.EditorFor(model => model.Vacancy.JobTitle, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Vacancy.JobTitle, "", new {@class = "text-danger"})
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Vacancy.JobDescription, new {@class = "control-label col-md-2"})
         
            <textarea id="basic-example" name="Vacancy.JobDescription">
                @if (Model.Vacancy != null)
                {
                    @Model.Vacancy.JobDescription
                }
            </textarea>
            @Html.ValidationMessageFor(model => model.Vacancy.JobDescription, "", new {@class = "text-danger"})
        </div>
        
        

        <div class="form-group">
            @Html.LabelFor(model => model.Vacancy.SalaryMin, new {@class = "control-label col-md-2"})
           
             <div class="input-group">
                    <div class="input-group-prepend">
                      <div class="input-group-text">£</div>
                </div>
                @Html.EditorFor(model => model.Vacancy.SalaryMin, new {htmlAttributes = new {@class = "form-control"}})
              </div>
            
            @Html.ValidationMessageFor(model => model.Vacancy.SalaryMin, "", new {@class = "text-danger"})
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Vacancy.SalaryMax, new {@class = "control-label col-md-2"})
            
             <div class="input-group">
                <div class="input-group-prepend">
                      <div class="input-group-text">£</div>
                </div>
                @Html.EditorFor(model => model.Vacancy.SalaryMax, new {htmlAttributes = new {@class = "form-control"}})
              </div>
            
            @Html.ValidationMessageFor(model => model.Vacancy.SalaryMax, "", new {@class = "text-danger"})
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Vacancy.ContractType, new {@class = "control-label col-md-2"})
            @Html.EditorFor(model => model.Vacancy.ContractType, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Vacancy.ContractType, "", new {@class = "text-danger"})
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Vacancy.StartDate, new {@class = "control-label col-md-2"})
            @Html.EditorFor(model => model.Vacancy.StartDate, new {htmlAttributes = new {@class = "form-control", type = "date"}})
            @Html.ValidationMessageFor(model => model.Vacancy.StartDate, "", new {@class = "text-danger"})
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Vacancy.EndDate, new {@class = "control-label col-md-2"})
            @Html.EditorFor(model => model.Vacancy.EndDate, new {htmlAttributes = new {@class = "form-control", type = "date"}})
            @Html.ValidationMessageFor(model => model.Vacancy.EndDate, "", new {@class = "text-danger"})
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Vacancy.Published, new {@class = "control-label col-md-2"})
            @Html.CheckBoxFor(model => model.Vacancy.Published, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Vacancy.Published, "", new {@class = "text-danger"})
        </div>


        <div class="form-group">
            <label for="salaryRangeSelect">Salary Range</label>
            <select class="select form-control" asp-for="SalaryRange" asp-items="Model.SalaryRanges" id="salaryRangeSelect">
                <option value="">SalaryRange</option>
            </select>
            @Html.ValidationMessageFor(model => model.SalaryRange, "", new {@class = "text-danger"})

        </div>


        <div class="form-group">
            <label for="departmentSelect">Department</label>
            <select class="select form-control" asp-for="Department" asp-items="Model.Departments" id="departmentSelect">
                <option value="">Department</option>
            </select>
            @Html.ValidationMessageFor(model => model.Department, "", new {@class = "text-danger"})

        </div>


    </fieldset>


    <fieldset>
        <legend class="form-control-lg">Custom Questions</legend>

        <div class="form-group">

            <div id="questions">

                @for (var i = 0; i < Model.Questions.Count; i++)
                {
                    <div class="form-group question">
                        @Html.LabelFor(model => Model.Questions[i].Question, $"Question {i + 1}", new {@class = "control-label"})
                        @Html.TextAreaFor(model => Model.Questions[i].Question, new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => Model.Questions[i].Question, "", new {@class = "text-danger"})
                    </div>
                }

            </div>

            <button class="btn btn-secondary" type="button" id="deleteLastQuestion">Delete last question</button>

            <button class="btn btn-primary" type="button" id="addQuestionButton">Add Question</button>

        </div>

    </fieldset>

    <button type="submit" class="btn btn-primary">Submit</button>
</form>

<script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>

    <script>

        function addQuestion() {
            const numberOfQuestions = $('.question').length;
            const newQuestionIndex = numberOfQuestions + 1;

            const newQuestionName = `Question ${newQuestionIndex}`;

            const template = `
                <div class="form-group question">
                    <label class="control-label" for="Questions_${newQuestionIndex -1}__Question">${newQuestionName}</label>
                    <textarea class="form-control" name="Questions[${newQuestionIndex -1}].Question" id="Questions_${newQuestionIndex -1}__Question"></textarea>
                </div>
                `;

            $('#questions').append(template);
        }

        function deleteLastQuestion() {
            $('.question').last().remove();
        }

        $("#addQuestionButton").on("click", addQuestion);
        $("#deleteLastQuestion").on("click", deleteLastQuestion);

    </script>



<!-- Initialize Quill editor -->
<script>
tinymce.init({
  selector: 'textarea#basic-example',
  height: 500,
  menubar: false,
  plugins: [
    'advlist autolink lists link image charmap print preview anchor',
    'searchreplace visualblocks code fullscreen',
    'insertdatetime media table paste code help wordcount'
  ],
  toolbar: 'undo redo | formatselect | ' +
  'bold italic backcolor | alignleft aligncenter ' +
  'alignright alignjustify | bullist numlist outdent indent | ' +
  'removeformat | help',
  content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'
});
</script>

